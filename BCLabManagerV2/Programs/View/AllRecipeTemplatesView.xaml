<UserControl x:Class="BCLabManager.View.AllRecipeTemplatesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
		     xmlns:model="clr-namespace:BCLabManager.Model"
             xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
		     xmlns:vm="clr-namespace:BCLabManager.ViewModel"
             xmlns:v="clr-namespace:BCLabManager.View"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1200">
    <UserControl.Resources>
        <v:LoopLabelConverter x:Key="llc"></v:LoopLabelConverter>
        <v:IndexConverter x:Key="idc"></v:IndexConverter>
        <v:JumpConditionConverter x:Key="jcc"></v:JumpConditionConverter>


        <CollectionViewSource x:Key="templatesCollectionViewSource" Source="{Binding Path=AllRecipeTemplates}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Id" Direction="Ascending"></scm:SortDescription>
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Group"></PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <Style x:Key="ValueStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <HierarchicalDataTemplate DataType="{x:Type vm:StepV2ViewModel}" 
                                  ItemsSource="{Binding Path=CutOffBehaviors}">
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold" DockPanel.Dock="Left" Margin="0,0,10,0">STEP</TextBlock>
                <TextBlock Text="Index="/>
                <TextBlock Text="{Binding Path=Index}" Style="{StaticResource ValueStyle}" Margin="0,0,5,0"  />
                <TextBlock Text="Mode="/>
                <TextBlock Text="{Binding Path=TesterAction.Mode}" Style="{StaticResource ValueStyle}"  Margin="0,0,5,0" />
                <TextBlock Text="Voltage="/>
                <TextBlock Text="{Binding Path=TesterAction.Voltage}" Style="{StaticResource ValueStyle}"  Margin="0,0,5,0" />
                <TextBlock Text="Current="/>
                <TextBlock Text="{Binding Path=TesterAction.Current}" Style="{StaticResource ValueStyle}"  Margin="0,0,5,0" />
                <TextBlock Text="Power="/>
                <TextBlock Text="{Binding Path=TesterAction.Power}" Style="{StaticResource ValueStyle}" />
            </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type vm:CutOffBehaviorViewModel}"
                                  ItemsSource="{Binding Path=JumpBehaviors}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="COB" FontWeight="Bold" Margin="0,0,5,0" />
                <TextBlock Text="{Binding Path=Condition.Parameter}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Mark}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Value}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
                <!--<TextBlock Text="JumpType=" Margin="0,0,5,0" />
                <TextBlock Text="{Binding Path=JumpType}" Margin="0,0,5,0"/>
                <TextBlock Text="Index=" Margin="0,0,5,0" Visibility="{Binding Path=JumpType, Converter={StaticResource idc}}"/>
                <TextBlock Text="{Binding Path=Index}" Margin="0,0,5,0" Visibility="{Binding Path=JumpType, Converter={StaticResource idc}}"/>
                <TextBlock Text="Loop1Target=" Margin="0,0,5,0"  Visibility="{Binding Path=Loop1Target, Converter={StaticResource llc}}"/>
                <TextBlock Text="{Binding Path=Loop1Target}" Margin="0,0,5,0"  Visibility="{Binding Path=Loop1Target, Converter={StaticResource llc}}"/>
                <TextBlock Text="Loop1Count=" Margin="0,0,5,0"   Visibility="{Binding Path=Loop1Target, Converter={StaticResource llc}}"/>
                <TextBlock Text="{Binding Path=Loop1Count}" Margin="0,0,5,0"  Visibility="{Binding Path=Loop1Target, Converter={StaticResource llc}}"/>
                <TextBlock Text="Loop2Target=" Margin="0,0,5,0"   Visibility="{Binding Path=Loop2Target, Converter={StaticResource llc}}"/>
                <TextBlock Text="{Binding Path=Loop2Target}" Margin="0,0,5,0"  Visibility="{Binding Path=Loop2Target, Converter={StaticResource llc}}"/>
                <TextBlock Text="Loop2Count=" Margin="0,0,5,0"   Visibility="{Binding Path=Loop2Target, Converter={StaticResource llc}}"/>
                <TextBlock Text="{Binding Path=Loop2Count}" Margin="0,0,5,0"  Visibility="{Binding Path=Loop2Target, Converter={StaticResource llc}}"/>-->
            </StackPanel>
        </HierarchicalDataTemplate>
        <DataTemplate DataType="{x:Type vm:JumpBehaviorViewModel}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="JPB" FontWeight="Bold" Margin="0,0,5,0" />
                <TextBlock Text="{Binding Path=Condition.Parameter}" Margin="0,0,5,0" Visibility="{Binding Path=Condition.Parameter, Converter={StaticResource jcc}}" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Mark}" Margin="0,0,5,0" Visibility="{Binding Path=Condition.Parameter, Converter={StaticResource jcc}}" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="{Binding Path=Condition.Value}" Margin="0,0,5,0" Visibility="{Binding Path=Condition.Parameter, Converter={StaticResource jcc}}" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="JumpType="/>
                <TextBlock Text="{Binding Path=JumpType}" Margin="0,0,5,0" Style="{StaticResource ValueStyle}"/>
                <TextBlock Text="Index=" Visibility="{Binding Path=JumpType, Converter={StaticResource idc}}"/>
                <TextBlock Text="{Binding Path=Index}" Margin="0,0,5,0" Visibility="{Binding Path=JumpType, Converter={StaticResource idc}}" Style="{StaticResource ValueStyle}"/>
            </StackPanel>
        </DataTemplate>

        <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#66000088" Offset="0" />
            <GradientStop Color="#BB000088" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <!-- 
      Stretch the content of each cell so that we can 
      right-align text in the Total Sales column. 
      -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*"></ColumnDefinition>
            <ColumnDefinition Width="10"></ColumnDefinition>
            <ColumnDefinition Width="88*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <GroupBox Header="Recipe Templates" Grid.Column="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="39*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="60*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox Header="Recipe Template">
                    <DockPanel>
                        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="_Create" Command="{Binding Path=CreateCommand}" Margin="0,5,5,0" Width="60"></Button>
                            <Button Content="_Edit" Command="{Binding Path=EditCommand}" Margin="0,5,5,0" Width="60" Visibility="Collapsed"></Button>
                            <Button Content="_Save As" Command="{Binding Path=SaveAsCommand}" Margin="0,5,5,0" Width="60"></Button>
                            <Button Content="_Abandon" Command="{Binding Path=AbandonCommand}" Margin="0,5,5,0" Width="60"></Button>
                        </StackPanel>
                        <!--<ListView Grid.Row="1"
                              x:Name="Recipelist"
              AlternationCount="2" 
              ItemContainerStyle="{StaticResource ListViewItemStyle}"
              ItemsSource="{Binding Path=AllRecipeTemplates}"
                              SelectedItem="{Binding Path=SelectedItem, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
              >

                        <ListView.View>
                            <GridView>
                                <GridViewColumn 
                                    Width="40"
                    Header="Id" 
                    DisplayMemberBinding="{Binding Path=Id}" 
                    />
                                <GridViewColumn 
                    Header="Name" 
                    DisplayMemberBinding="{Binding Path=Name}" 
                    />
                            </GridView>
                        </ListView.View>
                    </ListView>-->
                        <DataGrid GridLinesVisibility="None" x:Name="Recipelist" AutoGenerateColumns="False" 
                              ItemsSource="{Binding Source={StaticResource templatesCollectionViewSource}}" Background="White"
                              SelectedItem="{Binding Path=SelectedItem, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" IsReadOnly="True" Binding="{Binding Path=Id}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Path=Name}"></DataGridTextColumn>
                                <!--<DataGridTextColumn Header="Group" IsReadOnly="True" Binding="{Binding Path=Group}"></DataGridTextColumn>-->
                                <DataGridTextColumn Header="Editable" IsReadOnly="True" Binding="{Binding Path=Editable}"></DataGridTextColumn>
                            </DataGrid.Columns>
                            <DataGrid.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="GroupItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                                        <Expander IsExpanded="True">
                                                            <Expander.Header>
                                                                <TextBlock Text="{Binding Path=Name}"></TextBlock>
                                                            </Expander.Header>
                                                            <ItemsPresenter/>
                                                        </Expander>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </DataGrid.GroupStyle>
                        </DataGrid>
                    </DockPanel>
                </GroupBox>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80*"></RowDefinition>
                        <RowDefinition Height="10"></RowDefinition>
                        <RowDefinition Height="20*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Steps" Grid.Row="0">
                        <!--<DataGrid GridLinesVisibility="None" x:Name="Steplist" AutoGenerateColumns="False"  Background="White"
                          ItemsSource="{Binding Path=Steps}" CanUserSortColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" IsReadOnly="True" Binding="{Binding Path=Id}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Path=Name}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Loop Label" IsReadOnly="True" Binding="{Binding Path=LoopLabel}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Loop Target" IsReadOnly="True" Binding="{Binding Path=LoopTarget}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Loop Count" IsReadOnly="True" Binding="{Binding Path=LoopCount}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Compare Mark" IsReadOnly="True" Binding="{Binding Path=CompareMark}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Capacity" IsReadOnly="True" Binding="{Binding Path=Capacity}"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>-->
                        <TreeView ItemsSource="{Binding Path=Steps, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" x:Name="Steps">
                            <e:Interaction.Behaviors>
                                <v:BindableSelectedItemBehavior SelectedItem="{Binding Path=SelectedStep, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"></v:BindableSelectedItemBehavior>
                            </e:Interaction.Behaviors>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded" Value="True" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </GroupBox>
                    <GroupBox Header="Protections" Grid.Row="2">
                        <DataGrid GridLinesVisibility="None" x:Name="Protectionlist" AutoGenerateColumns="False"  Background="White"
                          ItemsSource="{Binding Path=Protections}" CanUserSortColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Parameter" IsReadOnly="True" Binding="{Binding Path=Parameter}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Mark" IsReadOnly="True" Binding="{Binding Path=Mark}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Value" IsReadOnly="True" Binding="{Binding Path=Value}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox Header="Groups" Grid.Column="0">
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="_Create" Command="{Binding Path=CreateGroupCommand}" Margin="0,5,5,0" Width="60"></Button>
                    <Button Content="_Manage" Command="{Binding Path=ManageGroupCommand}" Margin="0,5,5,0" Width="60"></Button>
                </StackPanel>
                <DataGrid GridLinesVisibility="None" x:Name="Grouplist" AutoGenerateColumns="False" 
                              ItemsSource="{Binding Path=AllGroups}" Background="White"
                              SelectedItem="{Binding Path=SelectedGroup, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" IsReadOnly="True" Binding="{Binding Path=Id}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Path=Name}"></DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>
    </Grid>
</UserControl>
